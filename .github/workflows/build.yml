name: Build Versioned Binaries

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            artifact_name: crusty-linux
            binary_ext: ''

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VERSION="v0.1.${COMMIT_COUNT}-${SHORT_SHA}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"
        shell: bash

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: Copy binary
        run: |
          BINARY_NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].targets[] | select(.kind[] == "bin") | .name' | head -n 1)
          cp target/release/${BINARY_NAME}${{ matrix.binary_ext }} binary${{ matrix.binary_ext }}
        shell: bash

      - name: Rename binary with version
        run: |
          mv binary${{ matrix.binary_ext }} ${{ matrix.artifact_name }}-${{ steps.version.outputs.version }}${{ matrix.binary_ext }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-${{ steps.version.outputs.version }}
          path: ${{ matrix.artifact_name }}-${{ steps.version.outputs.version }}${{ matrix.binary_ext }}
          retention-days: 30

      # Optional: Create release on tags
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact_name }}-${{ steps.version.outputs.version }}${{ matrix.binary_ext }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}